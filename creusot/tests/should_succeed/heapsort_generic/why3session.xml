<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC5" version="1.0.2" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.2" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="mlcfg" proved="true">
<path name=".."/><path name="heapsort_generic.mlcfg"/>
<theory name="HeapsortGeneric_HeapFragMax_Impl" proved="true">
 <goal name="heap_frag_max&#39;vc" expl="VC for heap_frag_max" proved="true">
 <proof prover="2"><result status="valid" time="0.05" steps="444"/></proof>
 </goal>
</theory>
<theory name="HeapsortGeneric_SiftDown" proved="true">
 <goal name="sift_down&#39;vc" expl="VC for sift_down" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="sift_down&#39;vc.0" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="39"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="17"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="90"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="242"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="433"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.7" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.8" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="27"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.9" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="91"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.10" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="400"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.11" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="444"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.12" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="551"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.13" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="456"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.14" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="129"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="497"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.16" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="312"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.17" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="1126"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="1113"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="1202"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.20" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.09" steps="1358"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="1178"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="1328"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.23" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.22" steps="39193"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.24" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="sift_down&#39;vc.24.0" expl="loop invariant preservation" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="sift_down&#39;vc.24.0.0" expl="loop invariant preservation" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="sift_down&#39;vc.24.0.0.0" expl="loop invariant preservation" proved="true">
     <proof prover="1"><result status="valid" time="0.99" steps="191181"/></proof>
     </goal>
     <goal name="sift_down&#39;vc.24.0.0.1" expl="loop invariant preservation" proved="true">
     <proof prover="1"><result status="valid" time="0.83" steps="152296"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="sift_down&#39;vc.24.1" expl="loop invariant preservation" proved="true">
   <proof prover="1"><result status="valid" time="0.93" steps="172959"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="sift_down&#39;vc.25" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.87" steps="136908"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.26" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.60" steps="92457"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.27" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.70" steps="108687"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.28" expl="postcondition" proved="true">
  <proof prover="1"><result status="valid" time="0.74" steps="106660"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.29" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="346"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.30" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="985"/></proof>
  </goal>
  <goal name="sift_down&#39;vc.31" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="3235"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="HeapsortGeneric_HeapSort" proved="true">
 <goal name="heap_sort&#39;vc" expl="VC for heap_sort" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="heap_sort&#39;vc.0" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.1" expl="division by zero" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="13"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.2" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="68"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="236"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.03" steps="447"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="108"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.6" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="128"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.7" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="29"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.8" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="151"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.9" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="216"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.10" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="1080"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="141"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.13" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="148"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.14" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="162"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.15" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="164"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.16" expl="assertion" proved="true">
  <proof prover="1"><result status="valid" time="0.49" steps="94994"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.17" expl="precondition" proved="true">
  <proof prover="1"><result status="valid" time="0.24" steps="43979"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.18" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="57"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.19" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="176"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.20" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="674"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.21" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.08" steps="1410"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.22" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="183"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.23" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="heap_sort&#39;vc.23.0" expl="loop invariant preservation" proved="true">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="valid" time="1.68" steps="352101"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="heap_sort&#39;vc.24" expl="loop invariant preservation" proved="true">
  <proof prover="1"><result status="valid" time="0.39" steps="77062"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.25" expl="integer overflow" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="121"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.26" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="143"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.27" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="173"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.28" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="149"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.29" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="1073"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.30" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.04" steps="562"/></proof>
  </goal>
  <goal name="heap_sort&#39;vc.31" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.06" steps="735"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
