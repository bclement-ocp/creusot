
module Core_Marker_PhantomData_Type
  type t_phantomdata 't =
    | C_PhantomData
    
end
module Core_Ptr_NonNull_NonNull_Type
  use prelude.Opaque
  type t_nonnull 't =
    | C_NonNull opaque_ptr
    
end
module Core_Ptr_Unique_Unique_Type
  use Core_Marker_PhantomData_Type as CPhantomData0
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull0
  type t_unique 't =
    | C_Unique (CNonNull0.t_nonnull 't) (CPhantomData0.t_phantomdata 't)
    
end
module Alloc_RawVec_RawVec_Type
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData0
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull0
  use Core_Ptr_Unique_Unique_Type as CUnique0
  type t_rawvec 't 'a =
    | C_RawVec (CUnique0.t_unique 't) usize 'a
    
end
module Alloc_Vec_Vec_Type
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData0
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull0
  use Core_Ptr_Unique_Unique_Type as CUnique0
  use Alloc_RawVec_RawVec_Type as CRawVec0
  type t_vec 't 'a =
    | C_Vec (CRawVec0.t_rawvec 't 'a) usize
    
end
module Alloc_Alloc_Global_Type
  type t_global  =
    | C_Global
    
end
module C206_A_Type
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use Alloc_Alloc_Global_Type as CGlobal0
  type t_a  =
    | C_A (CVec1.t_vec usize (CGlobal0.t_global))
    
end
module C206_A_0_Stub
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type as CVec1
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  val function field_0 [#"../206.rs" 5 13 5 23] (self : CA0.t_a) : CVec1.t_vec usize (CGlobal0.t_global)
end
module C206_A_0
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  let function field_0 [#"../206.rs" 5 13 5 23] (self : CA0.t_a) : CVec1.t_vec usize (CGlobal0.t_global)
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../206.rs" 1 0 1 0] match (self) with
      | CA0.C_A a -> a
      end
end
module Core_Num_Impl12_Max_Stub
  use prelude.UIntSize
  val constant mAX'  : usize
end
module Core_Num_Impl12_Max
  use prelude.UIntSize
  let constant mAX'  : usize = [@vc:do_not_keep_trace] [@vc:sp]
    (18446744073709551615 : usize)
end
module CreusotContracts_Logic_Int_Impl17_ShallowModel_Stub
  use mach.int.Int
  use prelude.UIntSize
  function shallow_model (self : usize) : int
end
module CreusotContracts_Logic_Int_Impl17_ShallowModel
  use mach.int.Int
  use prelude.UIntSize
  use mach.int.UInt64
  function shallow_model (self : usize) : int =
    UInt64.to_int self
  val shallow_model (self : usize) : int
    ensures { result = shallow_model self }
    
end
module CreusotContracts_Logic_Seq_Impl0_Len_Stub
  type t
  use mach.int.Int
  use seq.Seq
  function len (self : Seq.seq t) : int
end
module CreusotContracts_Logic_Seq_Impl0_Len
  type t
  use mach.int.Int
  use seq.Seq
  use seq.Seq
  function len (self : Seq.seq t) : int =
    Seq.length self
  val len (self : Seq.seq t) : int
    ensures { result = len self }
    
end
module CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub
  type t
  type a
  use prelude.UIntSize
  use prelude.Bool
  use seq.Seq
  use Alloc_Vec_Vec_Type as CVec0
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone Core_Num_Impl12_Max_Stub as MAx0
  function shallow_model (self : CVec0.t_vec t a) : Seq.seq t
end
module CreusotContracts_Std1_Vec_Impl0_ShallowModel
  type t
  type a
  use prelude.UIntSize
  use prelude.Bool
  use Core_Marker_PhantomData_Type as CPhantomData0
  use seq.Seq
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull0
  use Core_Ptr_Unique_Unique_Type as CUnique0
  use Alloc_RawVec_RawVec_Type as CRawVec0
  use Alloc_Vec_Vec_Type as CVec0
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone Core_Num_Impl12_Max_Stub as MAx0
  function shallow_model (self : CVec0.t_vec t a) : Seq.seq t
  val shallow_model (self : CVec0.t_vec t a) : Seq.seq t
    ensures { result = shallow_model self }
    
  axiom shallow_model_spec : forall self : CVec0.t_vec t a . Seq.length (shallow_model self) <= UInt64.to_int MAx0.mAX'
end
module C206_U2_Stub
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type as CVec1
  use seq.Seq
  use prelude.Bool
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0_Stub as Field00
  clone Core_Num_Impl12_Max_Stub as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global
  function u2 [#"../206.rs" 9 0 9 11] (a : CA0.t_a) : ()
end
module C206_U2
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use seq.Seq
  use prelude.Bool
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0_Stub as Field00
  clone Core_Num_Impl12_Max_Stub as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global
  function u2 [#"../206.rs" 9 0 9 11] (a : CA0.t_a) : () =
    [#"../206.rs" 7 0 7 8] ()
  val u2 [#"../206.rs" 9 0 9 11] (a : CA0.t_a) : ()
    ensures { result = u2 a }
    
  axiom u2_spec : forall a : CA0.t_a . [#"../206.rs" 8 10 8 22] ShallowModel2.shallow_model (Field00.field_0 a) = ShallowModel2.shallow_model (Field00.field_0 a)
end
module C206_U2_Impl
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use seq.Seq
  use prelude.Bool
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0 as Field00
  clone Core_Num_Impl12_Max as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global,
    val MAx0.mAX' = MAx0.mAX'
  let rec ghost function u2 [#"../206.rs" 9 0 9 11] (a : CA0.t_a) : ()
    ensures { [#"../206.rs" 8 10 8 22] ShallowModel2.shallow_model (Field00.field_0 a) = ShallowModel2.shallow_model (Field00.field_0 a) }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../206.rs" 7 0 7 8] ()
end
module C206_U_Stub
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type as CVec1
  use seq.Seq
  use prelude.Bool
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0_Stub as Field00
  clone Core_Num_Impl12_Max_Stub as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global
  function u [#"../206.rs" 12 0 12 14] (a : CA0.t_a) : ()
end
module C206_U
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use seq.Seq
  use prelude.Bool
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0_Stub as Field00
  clone Core_Num_Impl12_Max_Stub as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global
  clone C206_U2_Stub as U20
  function u [#"../206.rs" 12 0 12 14] (a : CA0.t_a) : () =
    [#"../206.rs" 14 8 14 13] U20.u2 a
  val u [#"../206.rs" 12 0 12 14] (a : CA0.t_a) : ()
    ensures { result = u a }
    
end
module C206_Ex_Stub
  use prelude.Bool
  use prelude.UIntSize
  use Alloc_Vec_Vec_Type as CVec1
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use seq.Seq
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0_Stub as Field00
  clone Core_Num_Impl12_Max_Stub as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel_Stub as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global
  clone C206_U_Stub as U0
  val ex [@cfg:stackify] [#"../206.rs" 19 0 19 16] (a : CA0.t_a) : ()
    ensures { [#"../206.rs" 18 10 18 26] U0.u a = U0.u a }
    
end
module C206_Ex
  use prelude.Bool
  use prelude.UIntSize
  use Core_Marker_PhantomData_Type as CPhantomData1
  use prelude.Opaque
  use Core_Ptr_NonNull_NonNull_Type as CNonNull1
  use Core_Ptr_Unique_Unique_Type as CUnique1
  use Alloc_RawVec_RawVec_Type as CRawVec1
  use Alloc_Vec_Vec_Type as CVec1
  use Alloc_Alloc_Global_Type as CGlobal0
  use C206_A_Type as CA0
  use seq.Seq
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt64
  use seq.Seq
  clone C206_A_0 as Field00
  clone Core_Num_Impl12_Max as MAx0
  clone CreusotContracts_Std1_Vec_Impl0_ShallowModel as ShallowModel2 with
    type t = usize,
    type a = CGlobal0.t_global,
    val MAx0.mAX' = MAx0.mAX'
  clone C206_U2 as U20 with
    function ShallowModel2.shallow_model = ShallowModel2.shallow_model,
    val Field00.field_0 = Field00.field_0
  clone C206_U as U0 with
    function U20.u2 = U20.u2
  let rec cfg ex [@cfg:stackify] [#"../206.rs" 19 0 19 16] (a : CA0.t_a) : ()
    ensures { [#"../206.rs" 18 10 18 26] U0.u a = U0.u a }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var a_1 : CA0.t_a;
  {
    a_1 <- a;
    goto BB0
  }
  BB0 {
    _0 <- ();
    return _0
  }
  
end
