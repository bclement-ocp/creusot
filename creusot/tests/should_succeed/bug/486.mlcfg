
module C486_HasMutRef_Type
  use prelude.Borrow
  type t_hasmutref 't =
    | C_HasMutRef (borrowed 't)
    
end
module C486_HasMutRef_0_Stub
  type t
  use prelude.Borrow
  use C486_HasMutRef_Type as CHasMutRef0
  val function field_0 [#"../486.rs" 4 28 4 37] (self : CHasMutRef0.t_hasmutref t) : borrowed t
end
module C486_HasMutRef_0
  type t
  use prelude.Borrow
  use C486_HasMutRef_Type as CHasMutRef0
  let function field_0 [#"../486.rs" 4 28 4 37] (self : CHasMutRef0.t_hasmutref t) : borrowed t
   = [@vc:do_not_keep_trace] [@vc:sp]
    [#"../486.rs" 1 0 1 0] match (self) with
      | CHasMutRef0.C_HasMutRef a -> a
      end
end
module CreusotContracts_Logic_Int_Impl11_ShallowModel_Stub
  use mach.int.Int
  use mach.int.UInt32
  function shallow_model (self : uint32) : int
end
module CreusotContracts_Logic_Int_Impl11_ShallowModel
  use mach.int.Int
  use mach.int.UInt32
  use mach.int.UInt32
  function shallow_model (self : uint32) : int =
    UInt32.to_int self
  val shallow_model (self : uint32) : int
    ensures { result = shallow_model self }
    
end
module C486_Test_Stub
  use prelude.Borrow
  use prelude.Bool
  use C486_HasMutRef_Type as CHasMutRef1
  use mach.int.UInt32
  use mach.int.Int
  use mach.int.UInt32
  clone C486_HasMutRef_0_Stub as Field01 with
    type t = uint32
  val test [@cfg:stackify] [#"../486.rs" 7 0 7 34] (x : CHasMutRef1.t_hasmutref uint32) : ()
    ensures { [#"../486.rs" 6 10 6 20] UInt32.to_int ( ^ Field01.field_0 x) = 5 }
    
end
module C486_Test
  use prelude.Borrow
  use prelude.Bool
  use C486_HasMutRef_Type as CHasMutRef1
  use mach.int.UInt32
  use prelude.Opaque
  use mach.int.Int
  use mach.int.UInt32
  clone C486_HasMutRef_0 as Field01 with
    type t = uint32
  let rec cfg test [@cfg:stackify] [#"../486.rs" 7 0 7 34] (x : CHasMutRef1.t_hasmutref uint32) : ()
    ensures { [#"../486.rs" 6 10 6 20] UInt32.to_int ( ^ Field01.field_0 x) = 5 }
    
   = [@vc:do_not_keep_trace] [@vc:sp]
  var _0 : ();
  var x_1 : CHasMutRef1.t_hasmutref uint32;
  {
    x_1 <- x;
    goto BB0
  }
  BB0 {
    x_1 <- (let CHasMutRef1.C_HasMutRef a = x_1 in CHasMutRef1.C_HasMutRef ({ (Field01.field_0 x_1) with current = ([#"../486.rs" 8 11 8 12] (5 : uint32)) }));
    _0 <- ();
    return _0
  }
  
end
